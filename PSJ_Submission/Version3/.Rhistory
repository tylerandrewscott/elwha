rm(list=ls())
require(stringr)
#library(MCMCpack)
#install.packages('lme4')
require(lme4)
#library(arm)
#library(blme)
#install.packages('pbkrtest')
require(pbkrtest)
#install.packages('LMERConvenienceFunctions')
require(LMERConvenienceFunctions)
require(mapproj)
require(ggmap)
require(DeducerSpatial)
require(UScensus2010)
require("rgdal") # requires sp, will use proj.4 if installed
require("maptools")
require("ggplot2")
require("plyr")
require(acs)
require(plyr)
require(Hmisc)
require(doParallel)
require(car)
source()
search()
rm(list=ls())
require(stringr)
#library(MCMCpack)
#install.packages('lme4')
require(lme4)
#library(arm)
#library(blme)
#install.packages('pbkrtest')
require(pbkrtest)
#install.packages('LMERConvenienceFunctions')
require(LMERConvenienceFunctions)
require(mapproj)
require(ggmap)
require(DeducerSpatial)
require(UScensus2010)
require("rgdal") # requires sp, will use proj.4 if installed
require("maptools")
require("ggplot2")
require("plyr")
require(acs)
require(plyr)
require(Hmisc)
require(doParallel)
help(package='Hmisc')
?nchar
rm(list=ls())
require(stringr)
require(lme4)
library(LMERConvenienceFunctions)
library(LMERConvenienceFunctions)
library(mapproj)
require(ggmap)
library(DeducerSpatial)
rm(list=ls())
require(stringr)
require(lme4)
library(LMERConvenienceFunctions)
library(mapproj)
require(ggmap)
library(DeducerSpatial)
library(UScensus2010)
library(rgdal) # requires sp, will use proj.4 if installed
require(acs)
require(doParallel)
rm(list=ls())
library(stringr)
library(lme4)
library(LMERConvenienceFunctions)
library(mapproj)
library(ggmap)
library(DeducerSpatial)
library(UScensus2010)
library(rgdal) # librarys sp, will use proj.4 if installed
library(acs)
library(doParallel)
rm(list=ls())
require(ggmap)
locdat<-data.frame(read.csv("H:/duckabush/management_data_v2.csv",header=TRUE))
names(locdat)
places<-data.frame(locdat$XLON_DD,locdat$XLAT_DD,locdat$HUC8,locdat$GROUP)
colnames(place)<-c('long','lat','HUC8','GROUP')
colnames(places)<-c('long','lat','HUC8','GROUP')
help(package='ggmap')
?get_map
help(package='ggmap')
colnames(places)<-c('lon','lat','HUC8','GROUP')
make_bbox(places)
make_bbox(lon=places$lon,lat=laces$lat)
make_bbox(lon=places$lon,lat=places$lat)
box<-make_bbox(lon=places$lon,lat=places$lat)
get_map(box)
us<-get_map(box)
ggmap(us)
?make-bbox
?make_bbox
box<-make_bbox(lon=places$lon,lat=places$lat,f=.25)
us<-get_map(box)
ggmap(us)
require(sp)
help(package='sp')
load("H:/duckabush/ate.runs.RData")
library(lme4)
install.packages('lme4')
library(lme4)
turb.ate
#rm(list=ls())
require(statnet)
#setwd('H:/passtosim')
#setwd("//Users/TScott/Google Drive/elwha")
setwd('H:/elwha/Dissert_Scripts/')
load('Hyak.Run2.RData')
t1 = data.frame(mod_base$sample[[1]]);t1$chain = 1;t1$iter = rownames(t1)
t2 = data.frame(mod_base$sample[[2]]);t2$chain = 2;t2$iter = rownames(t2)
t3 = data.frame(mod_base$sample[[3]]);t3$chain = 3;t3$iter = rownames(t3)
t4 = data.frame(mod_base$sample[[4]]);t4$chain = 4;t4$iter = rownames(t4)
t5 = data.frame(mod_base$sample[[5]]);t5$chain = 5;t5$iter = rownames(t5)
t6 = data.frame(mod_base$sample[[6]]);t6$chain = 6;t6$iter = rownames(t6)
t7 = data.frame(mod_base$sample[[7]]);t7$chain = 7;t7$iter = rownames(t7)
t8 = data.frame(mod_base$sample[[8]]);t8$chain = 8;t8$iter = rownames(t8)
tt = rbind(t1,t2,t3,t4,t5,t6,t7,t8)
library(reshape2)
tlong = melt(tt,id.vars=c('chain','iter'))
library(ggplot2)
head(tt)
tlong = tlong[tlong$chain<=4,]
dim(tlong)
tlong = tlong[tlong$chain<=2,]
dim(tlong)
ggplot(tlong) + geom_path(aes(x=iter,y=value,group=as.factor(variable),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free')
library(plyr)
library(dplyr)
ggplot(tlong) + geom_line(aes(x=iter,y=value,group=as.factor(variable),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free') + theme(legend.position = c(.75,.2))
ggplot(tlong) + geom_density(aes(x=value,group=as.factor(variable),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free') + theme(legend.position = c(.75,.2))
ggplot(tlong) + geom_density(aes(x=value,group=as.factor(chain),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free') + theme(legend.position = c(.75,.2))
tlong = melt(tt,id.vars=c('chain','iter'))
ggplot(tlong) + geom_density(aes(x=value,group=as.factor(chain),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free') + theme(legend.position = c(.75,.2))
library(ggthemes)
ggplot(tlong) + geom_line(aes(x=iter,y=value,group=as.factor(variable),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free') +
theme_tufte(ticks=F)+
theme(legend.position = c(.75,.2))
range(tlong$iter)
tlong$iter
summary(mod_base)
dim(t12)
dim(t1=)
dim(t1)
rownames(t1)
tt$iter
head(tlong)
range(tlong(iter))
t1 = data.frame(mod_base$sample[[1]]);t1$chain = 1;t1$iter = as.numeric(rownames(t1))
t2 = data.frame(mod_base$sample[[2]]);t2$chain = 2;t2$iter = as.numeric(rownames(t2))
t3 = data.frame(mod_base$sample[[3]]);t3$chain = 3;t3$iter = as.numeric(rownames(t3))
t4 = data.frame(mod_base$sample[[4]]);t4$chain = 4;t4$iter = as.numeric(rownames(t4))
t5 = data.frame(mod_base$sample[[5]]);t5$chain = 5;t5$iter = as.numeric(rownames(t5))
t6 = data.frame(mod_base$sample[[6]]);t6$chain = 6;t6$iter = as.numeric(rownames(t6))
t7 = data.frame(mod_base$sample[[7]]);t7$chain = 7;t7$iter = as.numeric(rownames(t7))
t8 = data.frame(mod_base$sample[[8]]);t8$chain = 8;t8$iter = as.numeric(rownames(t8))
tt = rbind(t1,t2,t3,t4,t5,t6,t7,t8)
tlong = melt(tt,id.vars=c('chain','iter'))
head(tlong)
range(tlong(iter))
range(tlong$iter)
ggplot(tlong) +
geom_line(aes(x=iter,y=value,group=as.factor(variable),colour=as.factor(chain)),alpha=.7)+
facet_wrap(~variable,scale='free') +
theme_tufte(ticks=F)+
theme(legend.position = c(.75,.2),legend.direction='horizontal')
?theme
ggplot(tlong) + geom_density(aes(x=value,group=as.factor(chain),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free') +
theme_tufte(ticks=F)+
scale_x_continuous(breaks=)
theme(legend.position = c(.75,.2), legend.direction='horizontal')
ggplot(tlong) + geom_density(aes(x=value,group=as.factor(chain),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free') +
theme_tufte(ticks=F)+
theme(legend.position = c(.75,.2), legend.direction='horizontal')
ggplot(tlong) + geom_density(aes(x=value,group=as.factor(chain),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free') +
scale_colour_tableau(title='MCMC Chain')+
theme_tufte(ticks=F)+
theme(legend.position = c(.5,.15), legend.direction='horizontal')
ggplot(tlong) + geom_density(aes(x=value,group=as.factor(chain),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free') +
scale_colour_tableau(name='MCMC Chain')+
theme_tufte(ticks=F)+
theme(legend.position = c(.5,.15), legend.direction='horizontal')
ggplot(tlong) + geom_density(aes(x=value,group=as.factor(chain),colour=as.factor(chain)))+
facet_wrap(~variable,scale='free') +
scale_colour_tableau(name='MCMC Chain')+
theme_tufte(ticks=F)+
theme(legend.position = c(.6,.15), legend.direction='horizontal')
ggplot(tlong) + geom_density(aes(x=value))+
facet_wrap(~variable,scale='free') +
theme_tufte(ticks=F)+
theme(legend.position = c(.6,.15), legend.direction='horizontal')
