
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #rm(list=ls())
> #rm(list=ls())
> require(statnet)
Loading required package: statnet
Loading required package: network
network: Classes for Relational Data
Version 1.11.3 created on 2014-12-05.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Martina Morris, University of Washington
                    Skye Bender-deMoll, University of Washington
 For citation information, type citation("network").
 Type help("network-package") to get started.

Loading required package: ergm
Loading required package: statnet.common

ergm: version 3.2.4, created on 2014-12-13
Copyright (c) 2014, Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Carter T. Butts, University of California -- Irvine
                    Steven M. Goodreau, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Martina Morris, University of Washington
                    with contributions from
                    Li Wang
                    Kirk Li, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("ergm").

NOTE: If you use custom ERGM terms based on ‘ergm.userterms’ version
prior to 3.1, you will need to perform a one-time update of the package
boilerplate files (the files that you did not write or modify) from
‘ergm.userterms’ 3.1 or later. See help('eut-upgrade') for
instructions.

Loading required package: sna
sna: Tools for Social Network Analysis
Version 2.3-2 created on 2014-01-13.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
 For citation information, type citation("sna").
 Type help(package="sna") to get started.


Attaching package: ‘sna’

The following object is masked from ‘package:network’:

    %c%

Loading required package: networkDynamic

networkDynamic: version 0.7.1, created on 2014-09-29
Copyright (c) 2014, Carter T. Butts, University of California -- Irvine
                    Ayn Leslie-Cook, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Skye Bender-deMoll, University of Washington
                    with contributions from
                    Zack Almquist, University of California -- Irvine
                    David R. Hunter, Penn State University
                    Li Wang
                    Kirk Li, University of Washington
                    Steven M. Goodreau, University of Washington
                    Jeffrey Horner
                    Martina Morris, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("networkDynamic").

Loading required package: tergm

tergm: version 3.2.4, created on 2014-12-13
Copyright (c) 2014, Pavel N. Krivitsky, University of Wollongong
                    Mark S. Handcock, University of California -- Los Angeles
                    with contributions from
                    David R. Hunter, Penn State University
                    Steven M. Goodreau, University of Washington
                    Martina Morris, University of Washington
                    Nicole Bohme Carnegie, New York University
                    Carter T. Butts, University of California -- Irvine
                    Ayn Leslie-Cook, University of Washington
                    Skye Bender-deMoll
                    Li Wang
                    Kirk Li, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("tergm").

Loading required package: ergm.count

ergm.count: version 3.1.1, created on 2013-03-29
Copyright (c) 2013, Pavel N. Krivitsky, University of Wollongong
                    with contributions from
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("ergm.count").

Loading required package: latentnet

latentnet: version 2.5.1, created on 2014-02-17
Copyright (c) 2014, Pavel N. Krivitsky, University of Wollongong
                    Mark S. Handcock, University of California -- Los Angeles
                    with contributions from
                    Susan M. Shortreed
                    Jeremy Tantrum
                    Peter D. Hoff
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("latentnet").


Attaching package: ‘latentnet’

The following object is masked from ‘package:base’:

    scale


statnet: version 2014.2.0, created on 2014-02-05
Copyright (c) 2014, Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Carter T. Butts, University of California -- Irvine
                    Steven M. Goodreau, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Skye Bender-deMoll
                    Martina Morris, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("statnet").

> library(snow)
> library(rlecuyer)
> library(Rmpi)

Attaching package: ‘Rmpi’

The following object is masked from ‘package:rlecuyer’:

    .onUnload

> #setwd('H:/passtosim')
> #setwd("//Users/TScott/Google Drive/elwha")
> #setwd('H:/elwha/Dissert_Scripts/')
> 
> setwd('/homes/tscott1/win/user/elwha/PSJ_Submission/Version3/')
> load('NetworkReady.RData')
> #load('Ready_to_ERGM.RData')
> g <- sum(net %e% "TVAL")/network.dyadcount(net)
> init.geo<-log(1 - 1/(g+1))
> geo.init = init.geo
> 
> as.mcmc.default <- coda:::as.mcmc.default
> as.mcmc.list.default <- coda:::as.mcmc.list.default
> 
> dpx <- dppsp * dpn
> spx <- sppsp * spn
> spn7 <- spn/7
> spx7 <- spx/7
> sppsp7 <- sppsp/7
> dpn7 <- dpn/7
> dpx7 <- dpx/7
> dppsp7 <- dppsp/7
> ipn_pt<-get.vertex.attribute(net,'IPn7')*as.sociomatrix(net,"PRIOR_TIE")
> ippsp_pt<-get.vertex.attribute(net,'IPpsp7')*as.sociomatrix(net,"PRIOR_TIE")
> ipx_pt<-get.vertex.attribute(net,'IPx7')*as.sociomatrix(net,"PRIOR_TIE")
> dpn_pt<-dpn7*as.sociomatrix(net,"PRIOR_TIE")
> dppsp_pt<-dppsp7*as.sociomatrix(net,"PRIOR_TIE")
> dpx_pt<-dpx7*as.sociomatrix(net,"PRIOR_TIE")
> spn_pt<-spn7*as.sociomatrix(net,"PRIOR_TIE")
> sppsp_pt<-sppsp7*as.sociomatrix(net,"PRIOR_TIE")
> spx_pt<-spx7*as.sociomatrix(net,"PRIOR_TIE")
> all_sp_quad<-((spn7+sppsp7)^2)
> all_sp_pt<-((spn7+sppsp7)*as.sociomatrix(net,"PRIOR_TIE"))
> all_sp<-(spn7+sppsp7)
> 
> 
> 
> mod_base_np <-
+   ergm(net~sum+mutual(form="geometric")+
+          transitiveweights("geomean","sum","geomean")+
+          nodecov("NUMRESP",form='sum')+
+          nodecov("NUMGROUPS",form='sum')+nodecov("MEANYEARS",form='sum')+
+          nodematch("ORGTYPE",form='sum',diff=FALSE),
+        response="TVAL", reference=~DiscUnif(0,3),
+        control=control.ergm(init=c(geo.init, rep(0, 6)),
+                             MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
+                             MCMLE.trustregion=1000,MCMC.addto.se=T,
+                            # parallel.type="SOCK",parallel=8,
+                             MPLE.max.dyad.types=1e+7,MCMC.samplesize=50000,
+                             MCMC.burnin=1000,MCMC.interval=1000,MCMLE.steplength=.25,
+                             MCMC.prop.args=list(p0=0.5)),eval.loglik=T,verbose=T)
Evaluating network in model
Initializing Metropolis-Hastings proposal(s): ergm:MH_DiscUnif
Initializing model.
Fitting initial model.
Fitting ERGM.
Density guard set to 20989 from an initial count of 1045  edges.
Iteration 1 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                            -3.091141                              0.000000 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                             0.000000                              0.000000 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                             0.000000                              0.000000 
                nodematch.sum.ORGTYPE 
                             0.000000 
Sampler accepted   3.170% of 50000000 proposed steps.
Sample size = 50000 by 50000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                             -8.06818                            -316.65872 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          -1566.63822                           -7623.22138 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                            -66.00345                           -6432.75325 
                nodematch.sum.ORGTYPE 
                            -27.71068 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                             -8.06818                            -316.65872 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          -1566.63822                           -7623.22138 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                            -66.00345                           -6432.75325 
                nodematch.sum.ORGTYPE 
                            -27.71068 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 48.81 
Step length converged once. Increasing MCMC sample size.
Iteration 2 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                        -3.2271723778                          0.4389776542 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                         0.1425633425                          0.0042871982 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                        -0.0006204123                         -0.0004101350 
                nodematch.sum.ORGTYPE 
                        -0.0287099994 
Sampler accepted   3.410% of 200000000 proposed steps.
Sample size = 200000 by 2e+05 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            173.68368                            -276.49552 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          -1216.08838                           -6915.75717 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           1451.50834                           -3315.24495 
                nodematch.sum.ORGTYPE 
                            -19.75192 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            173.68368                            -276.49552 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          -1216.08838                           -6915.75717 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           1451.50834                           -3315.24495 
                nodematch.sum.ORGTYPE 
                            -19.75192 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0477686524391175  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 6.862 
Iteration 3 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                        -3.396130e+00                          5.921670e-01 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                         2.037237e-01                          2.424429e-02 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                        -1.540765e-03                          9.648974e-05 
                nodematch.sum.ORGTYPE 
                        -1.878052e-02 
Sampler accepted   3.422% of 50000000 proposed steps.
Sample size = 50000 by 50000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                             180.4549                             -260.1246 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           -1124.0250                            -6392.9003 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                            1493.2427                            -2846.5793 
                nodematch.sum.ORGTYPE 
                             -18.6872 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                             180.4549                             -260.1246 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           -1124.0250                            -6392.9003 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                            1493.2427                            -2846.5793 
                nodematch.sum.ORGTYPE 
                             -18.6872 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0518701076507569  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.642 
Iteration 4 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                        -3.5206612171                          0.7011626076 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                         0.2541848382                          0.0348811334 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                        -0.0025469686                          0.0007990785 
                nodematch.sum.ORGTYPE 
                        -0.0223959997 
Sampler accepted   3.461% of 50000000 proposed steps.
Sample size = 50000 by 50000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            207.85256                            -240.85809 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           -987.09575                           -5812.95874 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           1712.56517                           -1896.56928 
                nodematch.sum.ORGTYPE 
                            -19.43078 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            207.85256                            -240.85809 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           -987.09575                           -5812.95874 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           1712.56517                           -1896.56928 
                nodematch.sum.ORGTYPE 
                            -19.43078 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0696053206920624  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.663 
Iteration 5 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                        -3.6329225438                          0.8155962925 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                         0.2914973416                          0.0426825650 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                        -0.0025666510                          0.0010255946 
                nodematch.sum.ORGTYPE 
                         0.0007382312 
Sampler accepted   3.556% of 50000000 proposed steps.
Sample size = 50000 by 50000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            281.00056                            -206.74095 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           -662.68510                           -4461.18760 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           2346.97741                             172.53289 
                nodematch.sum.ORGTYPE 
                            -10.90732 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            281.00056                            -206.74095 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           -662.68510                           -4461.18760 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           2346.97741                             172.53289 
                nodematch.sum.ORGTYPE 
                            -10.90732 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.138162344694138  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.054 
Iteration 6 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.679436265                           0.984411382 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.280951568                           0.046401666 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.002871421                           0.001700870 
                nodematch.sum.ORGTYPE 
                          0.047515047 
Sampler accepted   4.056% of 50000000 proposed steps.
Sample size = 50000 by 50000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            774.45202                             -43.35969 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1325.98205                             492.22570 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           6621.47733                           11393.15443 
                nodematch.sum.ORGTYPE 
                             30.81888 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            774.45202                             -43.35969 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1325.98205                             492.22570 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           6621.47733                           11393.15443 
                nodematch.sum.ORGTYPE 
                             30.81888 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.155557692050934  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.269 
Iteration 7 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.719201452                           1.110929855 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.271142953                           0.052727403 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.003702280                           0.001343584 
                nodematch.sum.ORGTYPE 
                          0.075327406 
Sampler accepted   4.100% of 50000000 proposed steps.
Sample size = 50000 by 50000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            861.62278                              20.98419 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1874.71766                            2229.99850 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           7324.64179                           13524.34263 
                nodematch.sum.ORGTYPE 
                             38.35260 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            861.62278                              20.98419 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1874.71766                            2229.99850 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           7324.64179                           13524.34263 
                nodematch.sum.ORGTYPE 
                             38.35260 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.194683372974396  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 5.063 
Iteration 8 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.781460820                           1.227952737 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.257372249                           0.061572791 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.004262381                           0.001966809 
                nodematch.sum.ORGTYPE 
                          0.099728800 
Sampler accepted   4.015% of 50000000 proposed steps.
Sample size = 50000 by 50000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            824.62438                              49.68357 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1942.75071                            2715.37626 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           7040.23145                           13532.96078 
                nodematch.sum.ORGTYPE 
                             42.64474 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            824.62438                              49.68357 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1942.75071                            2715.37626 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           7040.23145                           13532.96078 
                nodematch.sum.ORGTYPE 
                             42.64474 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.20477044582367  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.599 
Iteration 9 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.839759161                           1.309304343 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.245288114                           0.069574707 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.005332643                           0.002477284 
                nodematch.sum.ORGTYPE 
                          0.134665429 
Sampler accepted   3.746% of 50000000 proposed steps.
Sample size = 50000 by 50000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            594.63776                              21.31600 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1360.26968                            1710.44580 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           5023.61788                            9543.91474 
                nodematch.sum.ORGTYPE 
                             30.12486 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            594.63776                              21.31600 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1360.26968                            1710.44580 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           5023.61788                            9543.91474 
                nodematch.sum.ORGTYPE 
                             30.12486 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.244352817535401  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.612 
Iteration 10 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.891951549                           1.429402348 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.228409987                           0.078806062 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.006646236                           0.002907765 
                nodematch.sum.ORGTYPE 
                          0.147626365 
Sampler accepted   3.603% of 50000000 proposed steps.
Sample size = 50000 by 50000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            484.78568                              27.54842 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1153.89763                            1567.99960 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           4062.60334                            7770.23794 
                nodematch.sum.ORGTYPE 
                             22.30490 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            484.78568                              27.54842 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1153.89763                            1567.99960 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           4062.60334                            7770.23794 
                nodematch.sum.ORGTYPE 
                             22.30490 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.094 
Step length converged once. Increasing MCMC sample size.
Iteration 11 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.939264724                           1.504904817 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.209686480                           0.086740584 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.007242472                           0.003857707 
                nodematch.sum.ORGTYPE 
                          0.161369346 
