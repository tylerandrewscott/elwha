
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #rm(list=ls())
> #rm(list=ls())
> require(statnet)
Loading required package: statnet
Loading required package: network
network: Classes for Relational Data
Version 1.11.3 created on 2014-12-05.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Martina Morris, University of Washington
                    Skye Bender-deMoll, University of Washington
 For citation information, type citation("network").
 Type help("network-package") to get started.

Loading required package: ergm
Loading required package: statnet.common

ergm: version 3.2.4, created on 2014-12-13
Copyright (c) 2014, Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Carter T. Butts, University of California -- Irvine
                    Steven M. Goodreau, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Martina Morris, University of Washington
                    with contributions from
                    Li Wang
                    Kirk Li, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("ergm").

NOTE: If you use custom ERGM terms based on ‘ergm.userterms’ version
prior to 3.1, you will need to perform a one-time update of the package
boilerplate files (the files that you did not write or modify) from
‘ergm.userterms’ 3.1 or later. See help('eut-upgrade') for
instructions.

Loading required package: sna
sna: Tools for Social Network Analysis
Version 2.3-2 created on 2014-01-13.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
 For citation information, type citation("sna").
 Type help(package="sna") to get started.


Attaching package: ‘sna’

The following object is masked from ‘package:network’:

    %c%

Loading required package: networkDynamic

networkDynamic: version 0.7.1, created on 2014-09-29
Copyright (c) 2014, Carter T. Butts, University of California -- Irvine
                    Ayn Leslie-Cook, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Skye Bender-deMoll, University of Washington
                    with contributions from
                    Zack Almquist, University of California -- Irvine
                    David R. Hunter, Penn State University
                    Li Wang
                    Kirk Li, University of Washington
                    Steven M. Goodreau, University of Washington
                    Jeffrey Horner
                    Martina Morris, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("networkDynamic").

Loading required package: tergm

tergm: version 3.2.4, created on 2014-12-13
Copyright (c) 2014, Pavel N. Krivitsky, University of Wollongong
                    Mark S. Handcock, University of California -- Los Angeles
                    with contributions from
                    David R. Hunter, Penn State University
                    Steven M. Goodreau, University of Washington
                    Martina Morris, University of Washington
                    Nicole Bohme Carnegie, New York University
                    Carter T. Butts, University of California -- Irvine
                    Ayn Leslie-Cook, University of Washington
                    Skye Bender-deMoll
                    Li Wang
                    Kirk Li, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("tergm").

Loading required package: ergm.count

ergm.count: version 3.1.1, created on 2013-03-29
Copyright (c) 2013, Pavel N. Krivitsky, University of Wollongong
                    with contributions from
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("ergm.count").

Loading required package: latentnet

latentnet: version 2.5.1, created on 2014-02-17
Copyright (c) 2014, Pavel N. Krivitsky, University of Wollongong
                    Mark S. Handcock, University of California -- Los Angeles
                    with contributions from
                    Susan M. Shortreed
                    Jeremy Tantrum
                    Peter D. Hoff
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("latentnet").


Attaching package: ‘latentnet’

The following object is masked from ‘package:base’:

    scale


statnet: version 2014.2.0, created on 2014-02-05
Copyright (c) 2014, Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Carter T. Butts, University of California -- Irvine
                    Steven M. Goodreau, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Skye Bender-deMoll
                    Martina Morris, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("statnet").

> library(snow)
> library(rlecuyer)
> library(Rmpi)

Attaching package: ‘Rmpi’

The following object is masked from ‘package:rlecuyer’:

    .onUnload

> #setwd('H:/passtosim')
> #setwd("//Users/TScott/Google Drive/elwha")
> #setwd('H:/elwha/Dissert_Scripts/')
> 
> setwd('/homes/tscott1/win/user/elwha/PSJ_Submission/Version3/')
> load('NetworkReady.RData')
> #load('Ready_to_ERGM.RData')
> g <- sum(net %e% "TVAL")/network.dyadcount(net)
> init.geo<-log(1 - 1/(g+1))
> geo.init = init.geo
> 
> as.mcmc.default <- coda:::as.mcmc.default
> as.mcmc.list.default <- coda:::as.mcmc.list.default
> 
> dpx <- dppsp * dpn
> spx <- sppsp * spn
> spn7 <- spn/7
> spx7 <- spx/7
> sppsp7 <- sppsp/7
> dpn7 <- dpn/7
> dpx7 <- dpx/7
> dppsp7 <- dppsp/7
> ipn_pt<-get.vertex.attribute(net,'IPn7')*as.sociomatrix(net,"PRIOR_TIE")
> ippsp_pt<-get.vertex.attribute(net,'IPpsp7')*as.sociomatrix(net,"PRIOR_TIE")
> ipx_pt<-get.vertex.attribute(net,'IPx7')*as.sociomatrix(net,"PRIOR_TIE")
> dpn_pt<-dpn7*as.sociomatrix(net,"PRIOR_TIE")
> dppsp_pt<-dppsp7*as.sociomatrix(net,"PRIOR_TIE")
> dpx_pt<-dpx7*as.sociomatrix(net,"PRIOR_TIE")
> spn_pt<-spn7*as.sociomatrix(net,"PRIOR_TIE")
> sppsp_pt<-sppsp7*as.sociomatrix(net,"PRIOR_TIE")
> spx_pt<-spx7*as.sociomatrix(net,"PRIOR_TIE")
> all_sp_quad<-((spn7+sppsp7)^2)
> all_sp_pt<-((spn7+sppsp7)*as.sociomatrix(net,"PRIOR_TIE"))
> all_sp<-(spn7+sppsp7)
> 
> 
> mod_base <-
+   ergm(net~sum+mutual(form="geometric")+
+          transitiveweights("geomean","sum","geomean")+
+                     nodecov("NUMRESP",form='sum')+
+         nodecov("NUMGROUPS",form='sum')+nodecov("MEANYEARS",form='sum')+
+           nodematch("ORGTYPE",form='sum',diff=FALSE),
+        response="TVAL", reference=~DiscUnif(0,3),
+        control=control.ergm(init=c(geo.init, rep(0, 6)),
+                             MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
+                             MCMLE.trustregion=1000,MCMC.addto.se=T,
+                             parallel.type="SOCK",parallel=8,
+                             MPLE.max.dyad.types=1e+7,MCMC.samplesize=50000,
+                             MCMC.burnin=15000,MCMC.interval=1500,MCMLE.steplength=.25,
+                             MCMC.prop.args=list(p0=0.5)),eval.loglik=F,verbose=T)
Evaluating network in model
Initializing Metropolis-Hastings proposal(s): ergm:MH_DiscUnif
Initializing model.
Fitting initial model.
Fitting ERGM.
Density guard set to 20989 from an initial count of 1045  edges.
Iteration 1 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                            -3.091141                              0.000000 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                             0.000000                              0.000000 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                             0.000000                              0.000000 
                nodematch.sum.ORGTYPE 
                             0.000000 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                             -7.95148                            -315.24041 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          -1559.65993                           -7573.97296 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                            -75.15851                           -6345.78547 
                nodematch.sum.ORGTYPE 
                            -28.29800 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                             -7.95148                            -315.24041 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          -1559.65993                           -7573.97296 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                            -75.15851                           -6345.78547 
                nodematch.sum.ORGTYPE 
                            -28.29800 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 24 
Step length converged once. Increasing MCMC sample size.
Iteration 2 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                        -3.165701e+00                          2.604445e-01 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                         1.007805e-01                         -6.233176e-03 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         9.809929e-04                          3.291566e-05 
                nodematch.sum.ORGTYPE 
                         7.095300e-03 
Using SOCK.
Sample size = 200000 by 25000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            114.48656                            -294.91986 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          -1335.42797                           -7302.71082 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           1013.81604                           -4262.14998 
                nodematch.sum.ORGTYPE 
                            -16.55571 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            114.48656                            -294.91986 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          -1335.42797                           -7302.71082 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           1013.81604                           -4262.14998 
                nodematch.sum.ORGTYPE 
                            -16.55571 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0411410331726075  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 6.766 
Iteration 3 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                        -3.3464118995                          0.4482368289 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                         0.1667495640                          0.0160202654 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         0.0007566412                          0.0004550260 
                nodematch.sum.ORGTYPE 
                         0.0190217430 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            123.90602                            -278.89544 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          -1250.79427                           -6863.55800 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           1100.71707                           -3853.08378 
                nodematch.sum.ORGTYPE 
                            -15.69424 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            123.90602                            -278.89544 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          -1250.79427                           -6863.55800 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           1100.71707                           -3853.08378 
                nodematch.sum.ORGTYPE 
                            -15.69424 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0468788146972656  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.849 
Iteration 4 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                        -3.4794922129                          0.5752203945 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                         0.2231187560                          0.0285163031 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         0.0012672867                          0.0002185371 
                nodematch.sum.ORGTYPE 
                         0.0285727578 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                             126.8104                             -264.6093 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           -1170.6824                            -6488.1417 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                            1185.0618                            -3686.1765 
                nodematch.sum.ORGTYPE 
                             -13.3031 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                             126.8104                             -264.6093 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           -1170.6824                            -6488.1417 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                            1185.0618                            -3686.1765 
                nodematch.sum.ORGTYPE 
                             -13.3031 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0641657114028932  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 6.33 
Iteration 5 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                        -3.6199313130                          0.7278158575 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                         0.2762528514                          0.0397695290 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         0.0005202684                          0.0009867019 
                nodematch.sum.ORGTYPE 
                         0.0427101506 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            166.43818                            -239.33195 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           -992.35068                           -5683.52882 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           1583.66912                           -2311.83092 
                nodematch.sum.ORGTYPE 
                             -9.65176 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            166.43818                            -239.33195 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           -992.35068                           -5683.52882 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           1583.66912                           -2311.83092 
                nodematch.sum.ORGTYPE 
                             -9.65176 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0938491821289063  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.739 
Iteration 6 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.698075513                           0.864259349 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.308040337                           0.043415392 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.001177429                           0.001100858 
                nodematch.sum.ORGTYPE 
                          0.055341827 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            759.83636                             -68.87122 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1263.56414                             -18.10540 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           6635.90113                           10559.21289 
                nodematch.sum.ORGTYPE 
                             30.80664 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            759.83636                             -68.87122 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1263.56414                             -18.10540 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           6635.90113                           10559.21289 
                nodematch.sum.ORGTYPE 
                             30.80664 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.181094139814377  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 5.236 
Iteration 7 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.748923188                           1.021483607 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.302016236                           0.047386996 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.001853305                           0.001364694 
                nodematch.sum.ORGTYPE 
                          0.088586856 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            1281.1296                              102.1213 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                            3307.0800                             4933.9505 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           11095.9673                            21905.8393 
                nodematch.sum.ORGTYPE 
                              73.2387 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            1281.1296                              102.1213 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                            3307.0800                             4933.9505 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           11095.9673                            21905.8393 
                nodematch.sum.ORGTYPE 
                              73.2387 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.186112523078919  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.657 
Iteration 8 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.777729053                           1.122936724 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.286604702                           0.054109335 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.003412730                           0.001885863 
                nodematch.sum.ORGTYPE 
                          0.091047338 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                           1116.52442                              94.85258 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           2878.80747                            4419.18624 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           9554.15566                           19145.58409 
                nodematch.sum.ORGTYPE 
                             62.83712 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                           1116.52442                              94.85258 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           2878.80747                            4419.18624 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           9554.15566                           19145.58409 
                nodematch.sum.ORGTYPE 
                             62.83712 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.180202215909958  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.295 
Iteration 9 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.832763105                           1.213134238 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.274061829                           0.060788266 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.003686575                           0.002545144 
                nodematch.sum.ORGTYPE 
                          0.119899512 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            916.77524                              78.50889 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           2384.53025                            3633.57196 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           7914.08877                           15847.13066 
                nodematch.sum.ORGTYPE 
                             50.36424 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            916.77524                              78.50889 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           2384.53025                            3633.57196 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           7914.08877                           15847.13066 
                nodematch.sum.ORGTYPE 
                             50.36424 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.189066976308823  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.317 
Iteration 10 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.870040172                           1.305725008 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.260285844                           0.066547142 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.004435246                           0.003071817 
                nodematch.sum.ORGTYPE 
                          0.146197927 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            783.06800                              70.77636 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           2036.02581                            3142.90504 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           6729.76555                           13745.88057 
                nodematch.sum.ORGTYPE 
                             46.14666 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            783.06800                              70.77636 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           2036.02581                            3142.90504 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           6729.76555                           13745.88057 
                nodematch.sum.ORGTYPE 
                             46.14666 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.674 
Step length converged once. Increasing MCMC sample size.
Iteration 11 of at most 30 with parameter: 
                                  sum                      mutual.geom.mean 
                         -3.909634002                           1.400967555 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                          0.241085703                           0.075503452 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                         -0.005502741                           0.003355343 
                nodematch.sum.ORGTYPE 
                          0.170148104 
Using SOCK.
Sample size = 200000 by 25000 
Back from unconstrained MCMC. Average statistics:
                                  sum                      mutual.geom.mean 
                            606.09234                              55.21971 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1576.75273                            2452.78516 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           5175.74600                           10514.42032 
                nodematch.sum.ORGTYPE 
                             35.00540 
Average estimating equation values:
                                  sum                      mutual.geom.mean 
                            606.09234                              55.21971 
transitiveweights.geomean.sum.geomean                  nodecov.sum..NUMRESP 
                           1576.75273                            2452.78516 
               nodecov.sum..NUMGROUPS                nodecov.sum..MEANYEARS 
                           5175.74600                           10514.42032 
                nodematch.sum.ORGTYPE 
                             35.00540 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.582 
Step length converged twice. Stopping.

This model was fit using MCMC.  To examine model diagnostics and check for degeneracy, use the mcmc.diagnostics() function.
Warning message:
In logLikNull.ergm(mainfit) :
  Null model likelihood calculation is not implemented for valued ERGMs at this time.
> 
> 
> save.image('result_base.RData')
> 
> # mod_indpart3<-
> #   ergm(net~sum+mutual(form="min")+
> #          transitiveweights("min","max","min")+nodecov("NUMRESP")+
> #          nodecov("NUMGROUPS")+nodecov("MEANYEARS")+nodematch("ORGTYPE",form='sum')+
> #          nodecov('IPn7')+nodecov('IPpsp7')+nodecov('IPx7'),
> #        response="TVAL", reference=~DiscUnif(0,3),
> #        control=control.ergm(init=c(geo.init, rep(0, 9)),
> #                             MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
> #                             MCMLE.trustregion=1000,MCMC.addto.se=T,parallel.type="SOCK",
> #                             MPLE.max.dyad.types=1e+7,parallel=4,MCMC.samplesize=16000,
> #                             MCMC.burnin=10000,MCMC.interval=1000,MCMLE.steplength=.25,
> #                             MCMC.prop.args=list(p0=0.5)),eval.loglik=T)
> # 
> # mod_indpart<-mod_indpart3
> # 
> # mod_dirpart <-
> #     ergm(net~sum+mutual(form="min")+
> # transitiveweights("min","max","min")+nodecov("NUMRESP")+
> # nodecov("NUMGROUPS")+nodecov("MEANYEARS")+nodematch("ORGTYPE")+
> # edgecov(dpn7,form='sum')+edgecov(dppsp7,form='sum')+edgecov(dpx7,form='sum'),
> #          response="TVAL", reference=~DiscUnif(0,3),
> #          control=control.ergm(init=c(geo.init, rep(0, 9)),
> #                               MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
> #                               MCMLE.trustregion=1000,MCMC.addto.se=T,
> #                               parallel.type="MPI",parallel=8,
> #                               MPLE.max.dyad.types=1e+7,MCMC.samplesize=50000,
> #                               MCMC.burnin=15000,MCMC.interval=1500,MCMLE.steplength=.25,
> #                               MCMC.prop.args=list(p0=0.5)),eval.loglik=T)
> # 
> # mod_shapart <-
> #   ergm(net~sum+mutual(form="min")+
> #          transitiveweights("min","max","min")+nodecov("NUMRESP")+
> #          nodecov("NUMGROUPS")+nodecov("MEANYEARS")+nodematch("ORGTYPE",form='sum')+
> #          edgecov(spn7,form='sum')+edgecov(sppsp7,form='sum')+edgecov(spx7,form='sum'),
> #        response="TVAL", reference=~DiscUnif(0,3),
> #        control=control.ergm(init=c(geo.init, rep(0, 9)),
> #                             MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
> #                             MCMLE.trustregion=1000,MCMC.addto.se=T,
> #                             parallel.type="MPI",parallel=8,
> #                             MPLE.max.dyad.types=1e+7,MCMC.samplesize=50000,
> #                             MCMC.burnin=15000,MCMC.interval=1500,MCMLE.steplength=.25,
> #                             MCMC.prop.args=list(p0=0.5)),eval.loglik=T)
> # 
> # detach(file:NetworkReady.RData)
> # 
> # rm(
> # list=ls()[intersect(grep('shapart',ls(),invert=T),grep('dirpart',ls(),
> #                                                        invert=T))])
> 
> rm(list=ls())
> 
