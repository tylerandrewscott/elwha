
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #rm(list=ls())
> #rm(list=ls())
> require(statnet)
Loading required package: statnet
Loading required package: network
network: Classes for Relational Data
Version 1.11.3 created on 2014-12-05.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Martina Morris, University of Washington
                    Skye Bender-deMoll, University of Washington
 For citation information, type citation("network").
 Type help("network-package") to get started.

Loading required package: ergm
Loading required package: statnet.common

ergm: version 3.2.4, created on 2014-12-13
Copyright (c) 2014, Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Carter T. Butts, University of California -- Irvine
                    Steven M. Goodreau, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Martina Morris, University of Washington
                    with contributions from
                    Li Wang
                    Kirk Li, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("ergm").

NOTE: If you use custom ERGM terms based on ‘ergm.userterms’ version
prior to 3.1, you will need to perform a one-time update of the package
boilerplate files (the files that you did not write or modify) from
‘ergm.userterms’ 3.1 or later. See help('eut-upgrade') for
instructions.

Loading required package: sna
sna: Tools for Social Network Analysis
Version 2.3-2 created on 2014-01-13.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
 For citation information, type citation("sna").
 Type help(package="sna") to get started.


Attaching package: ‘sna’

The following object is masked from ‘package:network’:

    %c%

Loading required package: networkDynamic

networkDynamic: version 0.7.1, created on 2014-09-29
Copyright (c) 2014, Carter T. Butts, University of California -- Irvine
                    Ayn Leslie-Cook, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Skye Bender-deMoll, University of Washington
                    with contributions from
                    Zack Almquist, University of California -- Irvine
                    David R. Hunter, Penn State University
                    Li Wang
                    Kirk Li, University of Washington
                    Steven M. Goodreau, University of Washington
                    Jeffrey Horner
                    Martina Morris, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("networkDynamic").

Loading required package: tergm

tergm: version 3.2.4, created on 2014-12-13
Copyright (c) 2014, Pavel N. Krivitsky, University of Wollongong
                    Mark S. Handcock, University of California -- Los Angeles
                    with contributions from
                    David R. Hunter, Penn State University
                    Steven M. Goodreau, University of Washington
                    Martina Morris, University of Washington
                    Nicole Bohme Carnegie, New York University
                    Carter T. Butts, University of California -- Irvine
                    Ayn Leslie-Cook, University of Washington
                    Skye Bender-deMoll
                    Li Wang
                    Kirk Li, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("tergm").

Loading required package: ergm.count

ergm.count: version 3.1.1, created on 2013-03-29
Copyright (c) 2013, Pavel N. Krivitsky, University of Wollongong
                    with contributions from
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("ergm.count").

Loading required package: latentnet

latentnet: version 2.5.1, created on 2014-02-17
Copyright (c) 2014, Pavel N. Krivitsky, University of Wollongong
                    Mark S. Handcock, University of California -- Los Angeles
                    with contributions from
                    Susan M. Shortreed
                    Jeremy Tantrum
                    Peter D. Hoff
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("latentnet").


Attaching package: ‘latentnet’

The following object is masked from ‘package:base’:

    scale


statnet: version 2014.2.0, created on 2014-02-05
Copyright (c) 2014, Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Carter T. Butts, University of California -- Irvine
                    Steven M. Goodreau, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Skye Bender-deMoll
                    Martina Morris, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("statnet").

> library(snow)
> library(rlecuyer)
> library(Rmpi)

Attaching package: ‘Rmpi’

The following object is masked from ‘package:rlecuyer’:

    .onUnload

> #setwd('H:/passtosim')
> #setwd("//Users/TScott/Google Drive/elwha")
> #setwd('H:/elwha/Dissert_Scripts/')
> setwd('/homes/tscott1/win/user/elwha/PSJ_Submission/Version3/min_versions')
> load('NetworkReady.RData')
> #load('Ready_to_ERGM.RData')
> g <- sum(net %e% "TVAL")/network.dyadcount(net)
> init.geo<-log(1 - 1/(g+1))
> geo.init = init.geo
> 
> as.mcmc.default <- coda:::as.mcmc.default
> as.mcmc.list.default <- coda:::as.mcmc.list.default
> 
> dpx <- dppsp * dpn
> spx <- sppsp * spn
> spn7 <- spn/7
> spx7 <- spx/7
> sppsp7 <- sppsp/7
> dpn7 <- dpn/7
> dpx7 <- dpx/7
> dppsp7 <- dppsp/7
> ipn_pt<-get.vertex.attribute(net,'IPn7')*as.sociomatrix(net,"PRIOR_TIE")
> ippsp_pt<-get.vertex.attribute(net,'IPpsp7')*as.sociomatrix(net,"PRIOR_TIE")
> ipx_pt<-get.vertex.attribute(net,'IPx7')*as.sociomatrix(net,"PRIOR_TIE")
> dpn_pt<-dpn7*as.sociomatrix(net,"PRIOR_TIE")
> dppsp_pt<-dppsp7*as.sociomatrix(net,"PRIOR_TIE")
> dpx_pt<-dpx7*as.sociomatrix(net,"PRIOR_TIE")
> spn_pt<-spn7*as.sociomatrix(net,"PRIOR_TIE")
> sppsp_pt<-sppsp7*as.sociomatrix(net,"PRIOR_TIE")
> spx_pt<-spx7*as.sociomatrix(net,"PRIOR_TIE")
> all_sp_quad<-((spn7+sppsp7)^2)
> all_sp_pt<-((spn7+sppsp7)*as.sociomatrix(net,"PRIOR_TIE"))
> all_sp<-(spn7+sppsp7)
> 
> 
> # mod_base <-
> #   ergm(net~sum+mutual(form="geometric")+
> #          transitiveweights("geomean","sum","geomean")+
> #                     nodecov("NUMRESP",form='sum')+
> #         nodecov("NUMGROUPS",form='sum')+nodecov("MEANYEARS",form='sum')+
> #           nodematch("ORGTYPE",form='sum',diff=FALSE)+
> #         nodecov('allpart',form='sum'),
> #        response="TVAL", reference=~DiscUnif(0,3),
> #        control=control.ergm(init=c(geo.init, rep(0, 7)),
> #                             MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
> #                             MCMLE.trustregion=1000,MCMC.addto.se=T,
> #                             parallel.type="SOCK",parallel=8,
> #                             MPLE.max.dyad.types=1e+7,MCMC.samplesize=50000,
> #                             MCMC.burnin=15000,MCMC.interval=1500,MCMLE.steplength=.25,
> #                             MCMC.prop.args=list(p0=0.5)),eval.loglik=T)
> # 
> # 
> 
> 
> # mod_indpart<-
> # ergm(net~sum+mutual(form="geometric")+
> #        transitiveweights("geomean","sum","geomean")+
> #        nodecov("NUMRESP",form='sum')+
> #        nodecov("NUMGROUPS",form='sum')+nodecov("MEANYEARS",form='sum')+
> #        nodematch("ORGTYPE",form='sum',diff=FALSE)+
> #        nodecov('IPn7')+nodecov('IPpsp7')+nodecov('IPx7'),
> #      response="TVAL", reference=~DiscUnif(0,3),
> #      control=control.ergm(init=c(geo.init, rep(0, 9)),
> #                           MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
> #                           MCMLE.trustregion=100,MCMC.addto.se=T,
> #                           parallel.type="SOCK",parallel=8,
> #                           MPLE.max.dyad.types=1e+7,MCMC.samplesize=50000,
> #                           MCMC.burnin=15000,MCMC.interval=1000,MCMLE.steplength=.25,
> #                           MCMC.prop.args=list(p0=0.5)),eval.loglik=T,verbose=T)
> 
> 
> mod_dirpart <-
+   ergm(net~sum+
+          mutual(form="min")+
+          transitiveweights(twopath="min",combine="max",affect="min")+
+          nodecov("NUMRESP",form='sum')+
+          nodecov("NUMGROUPS",form='sum')+nodecov("MEANYEARS",form='sum')+
+          nodematch("ORGTYPE",form='sum',diff=FALSE)+
+ edgecov(dpn7,form='sum')+edgecov(dppsp7,form='sum')+edgecov(dpx7,form='sum'),
+          response="TVAL", reference=~DiscUnif(0,3),
+          control=control.ergm(init=c(geo.init, rep(0, 9)),
+                             MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
+ MCMLE.trustregion=100,MCMC.addto.se=T,
+ parallel.type="SOCK",parallel=8,
+ MPLE.max.dyad.types=1e+7,MCMC.samplesize=50000,
+ MCMC.burnin=15000,MCMC.interval=1000,MCMLE.steplength=.25,
+ MCMC.prop.args=list(p0=0.5)),eval.loglik=F,verbose=T)
Evaluating network in model
Initializing Metropolis-Hastings proposal(s): ergm:MH_DiscUnif
Initializing model.
Fitting initial model.
Fitting ERGM.
Density guard set to 20989 from an initial count of 1045  edges.
Iteration 1 of at most 30 with parameter: 
                          sum                    mutual.min 
                    -3.091141                      0.000000 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                     0.000000                      0.000000 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                     0.000000                      0.000000 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     0.000000                      0.000000 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                     0.000000                      0.000000 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    -11.25288                    -267.45246 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -622.15976                   -7559.97226 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    -90.61883                   -6364.07609 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -28.68066                   -2422.83774 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  -1089.17512                  -13758.46758 
Average estimating equation values:
                          sum                    mutual.min 
                    -11.25288                    -267.45246 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -622.15976                   -7559.97226 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    -90.61883                   -6364.07609 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -28.68066                   -2422.83774 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  -1089.17512                  -13758.46758 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 18.28 
Step length converged once. Increasing MCMC sample size.
Iteration 2 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.1622047047                  0.3532493965 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.0953000236                  0.0002427899 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 0.0001755556                  0.0001065914 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                -0.0035661558                 -0.0077611658 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                -0.0463321991                  0.0043688849 
Using SOCK.
Sample size = 200000 by 25000 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                      86.2714                     -244.1310 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -473.1602                    -7303.3735 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                     741.9156                    -4681.1241 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -20.2537                    -2440.3246 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -1103.2649                   -13795.9578 
Average estimating equation values:
                          sum                    mutual.min 
                      86.2714                     -244.1310 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -473.1602                    -7303.3735 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                     741.9156                    -4681.1241 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -20.2537                    -2440.3246 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -1103.2649                   -13795.9578 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0323280394077301  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 6.811 
Iteration 3 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.2391940555                  0.4932549392 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.1198263120                  0.0070956013 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -0.0005762417                  0.0003190230 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                 0.0086432657                  0.0752493765 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                 0.0965068811                  0.0012462730 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     88.66138                    -233.54710 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -452.94456                   -6996.86570 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    777.96354                   -4553.32347 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -18.52138                   -2324.93140 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  -1055.39138                  -13048.77398 
Average estimating equation values:
                          sum                    mutual.min 
                     88.66138                    -233.54710 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -452.94456                   -6996.86570 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    777.96354                   -4553.32347 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -18.52138                   -2324.93140 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  -1055.39138                  -13048.77398 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0411410331726075  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 6.214 
Iteration 4 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.329636e+00                  5.927707e-01 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 1.497824e-01                  1.392558e-02 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 6.858246e-05                  4.259553e-04 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                 2.257567e-02                  1.203763e-01 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                 2.373920e-01                 -2.156881e-03 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     97.98570                    -223.59152 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -415.84092                   -6600.80400 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    949.69064                   -4161.27963 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -16.31662                   -2206.60963 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -984.02925                  -12213.15916 
Average estimating equation values:
                          sum                    mutual.min 
                     97.98570                    -223.59152 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -415.84092                   -6600.80400 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    949.69064                   -4161.27963 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -16.31662                   -2206.60963 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -984.02925                  -12213.15916 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0452548861503601  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.814 
Iteration 5 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.4057169144                  0.7059340326 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.1745448714                  0.0201439599 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -0.0005122724                  0.0009566755 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                 0.0395017205                  0.1587879507 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                 0.3112909810                 -0.0047653325 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     99.50598                    -209.33024 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -379.51606                   -6177.76128 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    942.20218                   -3673.57790 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -13.84840                   -2065.71545 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -922.73912                  -11386.78222 
Average estimating equation values:
                          sum                    mutual.min 
                     99.50598                    -209.33024 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -379.51606                   -6177.76128 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    942.20218                   -3673.57790 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -13.84840                   -2065.71545 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -922.73912                  -11386.78222 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0608541369438172  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.802 
Iteration 6 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.4708225453                  0.8201494001 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.1843604432                  0.0255368593 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -0.0009552474                  0.0016475510 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                 0.0228797470                  0.1903118304 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                 0.3702805303                 -0.0075656116 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    103.35054                    -194.26216 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -354.68626                   -5787.49462 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    957.09433                   -3248.86070 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -16.78736                   -1943.30434 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -863.25507                  -10776.80617 
Average estimating equation values:
                          sum                    mutual.min 
                    103.35054                    -194.26216 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -354.68626                   -5787.49462 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    957.09433                   -3248.86070 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -16.78736                   -1943.30434 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -863.25507                  -10776.80617 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0699511766433716  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.986 
Iteration 7 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.545742767                   0.904377551 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.212370116                   0.029685921 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.001478080                   0.002159853 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                  0.041786290                   0.221833873 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  0.419266455                  -0.009562283 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     94.43262                    -180.00704 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -323.01866                   -5369.84320 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    901.83527                   -2997.57072 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -17.30588                   -1787.09523 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -799.47605                   -9845.09870 
Average estimating equation values:
                          sum                    mutual.min 
                     94.43262                    -180.00704 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -323.01866                   -5369.84320 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    901.83527                   -2997.57072 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -17.30588                   -1787.09523 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -799.47605                   -9845.09870 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0790255665779115  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.196 
Iteration 8 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.616501076                   0.981174593 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.225756572                   0.034159678 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.001151217                   0.002907226 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                  0.051968077                   0.246584871 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  0.459069734                  -0.011677965 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     96.66546                    -163.28026 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -290.39518                   -4894.01350 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    975.16557                   -2653.30097 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -17.02826                   -1646.06212 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -740.36573                   -9124.96966 
Average estimating equation values:
                          sum                    mutual.min 
                     96.66546                    -163.28026 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -290.39518                   -4894.01350 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    975.16557                   -2653.30097 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -17.02826                   -1646.06212 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -740.36573                   -9124.96966 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.084120273590088  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.643 
Iteration 9 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.690942450                   1.017911524 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.247812263                   0.039122332 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.002036276                   0.003553293 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                  0.084737970                   0.277040918 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  0.510488274                  -0.014400109 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    108.93262                    -147.30452 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -232.51324                   -4247.21414 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                   1075.59799                   -1859.02031 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -10.74744                   -1477.69815 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -661.25545                   -8200.52935 
Average estimating equation values:
                          sum                    mutual.min 
                    108.93262                    -147.30452 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -232.51324                   -4247.21414 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                   1075.59799                   -1859.02031 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                    -10.74744                   -1477.69815 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -661.25545                   -8200.52935 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0988261699676515  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.727 
Iteration 10 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.751194215                   1.073809278 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.263916518                   0.042819859 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.002145430                   0.003791937 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                  0.094625653                   0.297169932 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  0.548567154                  -0.016157481 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     90.70062                    -132.66608 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -209.98866                   -3829.60972 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    967.38365                   -1954.46876 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -8.61916                   -1342.19342 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -593.34403                   -7395.66761 
Average estimating equation values:
                          sum                    mutual.min 
                     90.70062                    -132.66608 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -209.98866                   -3829.60972 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    967.38365                   -1954.46876 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -8.61916                   -1342.19342 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -593.34403                   -7395.66761 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.127894818782807  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.638 
Iteration 11 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.799050734                   1.114369676 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.279866657                   0.044786170 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.004445216                   0.004461393 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                  0.109473260                   0.327687020 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  0.591827323                  -0.018640823 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     94.38242                    -115.00472 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -166.38136                   -3306.63288 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    909.65300                   -1378.38643 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -8.55380                   -1177.11368 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -521.92161                   -6520.84395 
Average estimating equation values:
                          sum                    mutual.min 
                     94.38242                    -115.00472 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -166.38136                   -3306.63288 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    909.65300                   -1378.38643 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -8.55380                   -1177.11368 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -521.92161                   -6520.84395 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.139590829610825  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.199 
Iteration 12 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.869032352                   1.159298110 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.295403867                   0.047077256 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.004252336                   0.005033577 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                  0.121284246                   0.355558593 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  0.627229168                  -0.020751577 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                      68.1682                     -100.9062 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -153.0905                    -2925.5221 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                     724.2495                    -1461.1014 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                      -7.9134                    -1020.6871 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                    -461.0090                    -5690.8140 
Average estimating equation values:
                          sum                    mutual.min 
                      68.1682                     -100.9062 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -153.0905                    -2925.5221 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                     724.2495                    -1461.1014 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                      -7.9134                    -1020.6871 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                    -461.0090                    -5690.8140 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.154191821813583  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.559 
Iteration 13 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.903323561                   1.207913173 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.296094329                   0.048943026 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.005617824                   0.005409245 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                  0.131058524                   0.383539940 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  0.660546976                  -0.022891866 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     80.79672                     -80.20248 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -109.25978                   -2398.10008 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    839.92747                    -828.67656 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -7.07336                    -857.73037 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -390.41425                   -4888.58941 
Average estimating equation values:
                          sum                    mutual.min 
                     80.79672                     -80.20248 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -109.25978                   -2398.10008 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    839.92747                    -828.67656 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -7.07336                    -857.73037 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -390.41425                   -4888.58941 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.186280190944672  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.173 
Iteration 14 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.942438952                   1.262088084 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.295853976                   0.050504976 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.007612741                   0.006107858 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                  0.145190837                   0.409602810 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  0.706905395                  -0.024780195 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     64.27622                     -60.17368 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -89.89760                   -1967.73282 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    626.96857                    -774.63446 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -6.23364                    -685.26675 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -310.30153                   -3868.62672 
Average estimating equation values:
                          sum                    mutual.min 
                     64.27622                     -60.17368 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -89.89760                   -1967.73282 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    626.96857                    -774.63446 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -6.23364                    -685.26675 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -310.30153                   -3868.62672 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.208438485860825  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.552 
Iteration 15 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -4.005292031                   1.280993476 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.301044552                   0.053375270 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.008240791                   0.006653148 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                  0.170422379                   0.436281432 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  0.739597955                  -0.026487861 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     40.04776                     -46.56602 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -79.43696                   -1595.48026 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    429.84566                    -817.49902 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -6.30152                    -542.59735 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -240.42910                   -3008.16758 
Average estimating equation values:
                          sum                    mutual.min 
                     40.04776                     -46.56602 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -79.43696                   -1595.48026 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    429.84566                    -817.49902 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -6.30152                    -542.59735 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -240.42910                   -3008.16758 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 2.846 
Step length converged once. Increasing MCMC sample size.
Iteration 16 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -4.041229412                   1.267298155 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.299862915                   0.056574495 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.010790309                   0.007766123 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                  0.181093862                   0.459294374 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                  0.770655481                  -0.028173773 
Using SOCK.
Sample size = 200000 by 25000 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     34.66334                     -36.93820 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -51.47525                   -1182.22528 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    357.37755                    -548.17266 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -6.24964                    -418.42956 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -176.33290                   -2255.89160 
Average estimating equation values:
                          sum                    mutual.min 
                     34.66334                     -36.93820 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -51.47525                   -1182.22528 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    357.37755                    -548.17266 
        nodematch.sum.ORGTYPE              edgecov.dpn7.sum 
                     -6.24964                    -418.42956 
           edgecov.dppsp7.sum              edgecov.dpx7.sum 
                   -176.33290                   -2255.89160 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 1.599 
Step length converged twice. Stopping.

This model was fit using MCMC.  To examine model diagnostics and check for degeneracy, use the mcmc.diagnostics() function.
Warning message:
In logLikNull.ergm(mainfit) :
  Null model likelihood calculation is not implemented for valued ERGMs at this time.
> 
> 
> save.image('result_dirpart.RData')
> # 
> # mod_shapart <-
> #   ergm(net~sum+mutual(form="min")+
> #          transitiveweights("min","max","min")+nodecov("NUMRESP")+
> #          nodecov("NUMGROUPS")+nodecov("MEANYEARS")+nodematch("ORGTYPE",form='sum')+
> #          edgecov(spn7,form='sum')+edgecov(sppsp7,form='sum')+edgecov(spx7,form='sum'),
> #        response="TVAL", reference=~DiscUnif(0,3),
> #        control=control.ergm(init=c(geo.init, rep(0, 9)),
> #                             MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
> #                             MCMLE.trustregion=1000,MCMC.addto.se=T,
> #                             parallel.type="MPI",parallel=8,
> #                             MPLE.max.dyad.types=1e+7,MCMC.samplesize=50000,
> #                             MCMC.burnin=15000,MCMC.interval=1500,MCMLE.steplength=.25,
> #                             MCMC.prop.args=list(p0=0.5)),eval.loglik=T)
> # 
> # detach(file:NetworkReady.RData)
> # 
> # rm(
> # list=ls()[intersect(grep('shapart',ls(),invert=T),grep('dirpart',ls(),
> #                                                        invert=T))])
> 
> rm(list=ls())
> 
