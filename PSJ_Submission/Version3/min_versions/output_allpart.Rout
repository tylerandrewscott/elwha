
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> require(statnet)
Loading required package: statnet
Loading required package: network
network: Classes for Relational Data
Version 1.11.3 created on 2014-12-05.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Martina Morris, University of Washington
                    Skye Bender-deMoll, University of Washington
 For citation information, type citation("network").
 Type help("network-package") to get started.

Loading required package: ergm
Loading required package: statnet.common

ergm: version 3.2.4, created on 2014-12-13
Copyright (c) 2014, Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Carter T. Butts, University of California -- Irvine
                    Steven M. Goodreau, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Martina Morris, University of Washington
                    with contributions from
                    Li Wang
                    Kirk Li, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("ergm").

NOTE: If you use custom ERGM terms based on ‘ergm.userterms’ version
prior to 3.1, you will need to perform a one-time update of the package
boilerplate files (the files that you did not write or modify) from
‘ergm.userterms’ 3.1 or later. See help('eut-upgrade') for
instructions.

Loading required package: sna
sna: Tools for Social Network Analysis
Version 2.3-2 created on 2014-01-13.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
 For citation information, type citation("sna").
 Type help(package="sna") to get started.


Attaching package: ‘sna’

The following object is masked from ‘package:network’:

    %c%

Loading required package: networkDynamic

networkDynamic: version 0.7.1, created on 2014-09-29
Copyright (c) 2014, Carter T. Butts, University of California -- Irvine
                    Ayn Leslie-Cook, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Skye Bender-deMoll, University of Washington
                    with contributions from
                    Zack Almquist, University of California -- Irvine
                    David R. Hunter, Penn State University
                    Li Wang
                    Kirk Li, University of Washington
                    Steven M. Goodreau, University of Washington
                    Jeffrey Horner
                    Martina Morris, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("networkDynamic").

Loading required package: tergm

tergm: version 3.2.4, created on 2014-12-13
Copyright (c) 2014, Pavel N. Krivitsky, University of Wollongong
                    Mark S. Handcock, University of California -- Los Angeles
                    with contributions from
                    David R. Hunter, Penn State University
                    Steven M. Goodreau, University of Washington
                    Martina Morris, University of Washington
                    Nicole Bohme Carnegie, New York University
                    Carter T. Butts, University of California -- Irvine
                    Ayn Leslie-Cook, University of Washington
                    Skye Bender-deMoll
                    Li Wang
                    Kirk Li, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("tergm").

Loading required package: ergm.count

ergm.count: version 3.1.1, created on 2013-03-29
Copyright (c) 2013, Pavel N. Krivitsky, University of Wollongong
                    with contributions from
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("ergm.count").

Loading required package: latentnet

latentnet: version 2.5.1, created on 2014-02-17
Copyright (c) 2014, Pavel N. Krivitsky, University of Wollongong
                    Mark S. Handcock, University of California -- Los Angeles
                    with contributions from
                    Susan M. Shortreed
                    Jeremy Tantrum
                    Peter D. Hoff
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("latentnet").


Attaching package: ‘latentnet’

The following object is masked from ‘package:base’:

    scale


statnet: version 2014.2.0, created on 2014-02-05
Copyright (c) 2014, Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Carter T. Butts, University of California -- Irvine
                    Steven M. Goodreau, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Skye Bender-deMoll
                    Martina Morris, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("statnet").

> require(rlecuyer)
Loading required package: rlecuyer
> require(Rmpi)
Loading required package: Rmpi

Attaching package: ‘Rmpi’

The following object is masked from ‘package:rlecuyer’:

    .onUnload

> 
> #setwd('H:/passtosim')
> #setwd("//Users/TScott/Google Drive/elwha")
> #setwd('win/user/elwha/Dissert_Scripts/')
> setwd('/homes/tscott1/win/user/elwha/PSJ_Submission/Version3/min_versions')
> load('NetworkReady.RData')
> 
> 
> #load('Ready_to_ERGM.RData')
> g <- sum(net %e% "TVAL")/network.dyadcount(net)
> init.geo<-log(1 - 1/(g+1))
> geo.init = init.geo
> 
> as.mcmc.default <- coda:::as.mcmc.default
> as.mcmc.list.default <- coda:::as.mcmc.list.default
> #/homes/tscott1/win
> 
> dpx <- dppsp * dpn
> spx <- sppsp * spn
> spn7 <- spn/7
> spx7 <- spx/7
> sppsp7 <- sppsp/7
> dpn7 <- dpn/7
> dpx7 <- dpx/7
> dppsp7 <- dppsp/7
> ipn_pt<-get.vertex.attribute(net,'IPn7')*as.sociomatrix(net,"PRIOR_TIE")
> ippsp_pt<-get.vertex.attribute(net,'IPpsp7')*as.sociomatrix(net,"PRIOR_TIE")
> ipx_pt<-get.vertex.attribute(net,'IPx7')*as.sociomatrix(net,"PRIOR_TIE")
> dpn_pt<-dpn7*as.sociomatrix(net,"PRIOR_TIE")
> dppsp_pt<-dppsp7*as.sociomatrix(net,"PRIOR_TIE")
> dpx_pt<-dpx7*as.sociomatrix(net,"PRIOR_TIE")
> spn_pt<-spn7*as.sociomatrix(net,"PRIOR_TIE")
> sppsp_pt<-sppsp7*as.sociomatrix(net,"PRIOR_TIE")
> spx_pt<-spx7*as.sociomatrix(net,"PRIOR_TIE")
> all_sp_quad<-((spn7+sppsp7)^2)
> all_sp_pt<-((spn7+sppsp7)*as.sociomatrix(net,"PRIOR_TIE"))
> all_sp<-(spn7+sppsp7)
> 
> 
> mod_allpart <-
+   ergm(net~sum+
+          mutual(form="min")+
+          transitiveweights(twopath="min",combine="max",affect="min")+
+          nodecov("NUMRESP",form='sum')+
+          nodecov("NUMGROUPS",form='sum')+nodecov("MEANYEARS",form='sum')+
+          nodematch("ORGTYPE",form='sum',diff=FALSE)+
+          nodecov('allpartdiv7'),
+        response="TVAL", reference=~DiscUnif(0,3),
+        control=control.ergm(init=c(geo.init, rep(0, 7)),
+                             MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
+                             MCMLE.trustregion=100,MCMC.addto.se=T,
+                             parallel.type="SOCK",parallel=8,
+                             MPLE.max.dyad.types=1e+7,MCMC.samplesize=50000,
+                             MCMC.burnin=15000,MCMC.interval=1000,MCMLE.steplength=.25,
+                             MCMC.prop.args=list(p0=0.5)),eval.loglik=F,verbose=T)
Evaluating network in model
Initializing Metropolis-Hastings proposal(s): ergm:MH_DiscUnif
Initializing model.
Fitting initial model.
Fitting ERGM.
Density guard set to 20989 from an initial count of 1045  edges.
Iteration 1 of at most 30 with parameter: 
                          sum                    mutual.min 
                    -3.091141                      0.000000 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                     0.000000                      0.000000 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                     0.000000                      0.000000 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     0.000000                      0.000000 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    -11.25288                    -267.45246 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -622.15976                   -7559.97226 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    -90.61883                   -6364.07609 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -28.68066                  -15277.61639 
Average estimating equation values:
                          sum                    mutual.min 
                    -11.25288                    -267.45246 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -622.15976                   -7559.97226 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    -90.61883                   -6364.07609 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -28.68066                  -15277.61639 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 18.05 
Step length converged once. Increasing MCMC sample size.
Iteration 2 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.1634715393                  0.3466051670 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.0957034674                  0.0014185463 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 0.0001417153                  0.0001897001 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 0.0031698918                 -0.0012483642 
Using SOCK.
Sample size = 200000 by 25000 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     88.40274                    -244.38802 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -471.37620                   -7301.54170 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    758.74318                   -4639.14176 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -18.57883                  -15027.64180 
Average estimating equation values:
                          sum                    mutual.min 
                     88.40274                    -244.38802 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -471.37620                   -7301.54170 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    758.74318                   -4639.14176 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -18.57883                  -15027.64180 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0471839904785157  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 6.59 
Iteration 3 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.3023555274                  0.5485114114 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.1305532562                  0.0167513946 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -0.0005114353                  0.0006902602 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 0.0144796021                  0.0044941250 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     78.96364                    -230.09538 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -449.50964                   -6913.87532 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    717.13449                   -4539.87953 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -21.61592                  -14227.89651 
Average estimating equation values:
                          sum                    mutual.min 
                     78.96364                    -230.09538 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -449.50964                   -6913.87532 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    717.13449                   -4539.87953 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -21.61592                  -14227.89651 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0526291429996491  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.96 
Iteration 4 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.4098334776                  0.6910901143 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.1539117404                  0.0252110436 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 0.0001814506                  0.0008914403 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 0.0381898872                  0.0099262174 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     86.97976                    -216.11484 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -414.57972                   -6472.74300 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    834.29245                   -4157.94528 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -15.32128                  -13218.25467 
Average estimating equation values:
                          sum                    mutual.min 
                     86.97976                    -216.11484 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -414.57972                   -6472.74300 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    834.29245                   -4157.94528 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -15.32128                  -13218.25467 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0579984486103058  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.721 
Iteration 5 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.499859e+00                  7.924467e-01 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 1.748506e-01                  3.378736e-02 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -5.754689e-05                  1.616674e-03 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 3.413272e-02                  1.228789e-02 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    100.94762                    -203.57446 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -364.46018                   -6023.30952 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    951.13724                   -3387.93437 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -16.08548                  -12322.12837 
Average estimating equation values:
                          sum                    mutual.min 
                    100.94762                    -203.57446 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -364.46018                   -6023.30952 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    951.13724                   -3387.93437 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -16.08548                  -12322.12837 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0715405941009523  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.346 
Iteration 6 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.578686379                   0.923068339 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.194133823                   0.043750651 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.001319185                   0.002364279 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                  0.057851663                   0.013570297 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     119.3517                     -184.8547 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -305.4493                    -5477.7918 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    1086.4160                    -2607.2201 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -12.4416                   -11282.2236 
Average estimating equation values:
                          sum                    mutual.min 
                     119.3517                     -184.8547 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -305.4493                    -5477.7918 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    1086.4160                    -2607.2201 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -12.4416                   -11282.2236 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.084181308746338  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.284 
Iteration 7 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.655183624                   1.032791388 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.205645769                   0.054020609 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.002020524                   0.002479192 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                  0.071560029                   0.014577689 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    116.14858                    -166.46144 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -269.36570                   -5000.42560 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                   1050.78106                   -2365.16475 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -12.94536                  -10335.68881 
Average estimating equation values:
                          sum                    mutual.min 
                    116.14858                    -166.46144 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -269.36570                   -5000.42560 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                   1050.78106                   -2365.16475 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -12.94536                  -10335.68881 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.107981085777283  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.889 
Iteration 8 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.727736059                   1.117026633 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.199125177                   0.063788618 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.002034633                   0.002765617 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                  0.098240800                   0.016510431 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     95.78776                    -153.13504 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -250.35232                   -4502.87726 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    924.65779                   -2368.29640 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -12.21206                   -9362.34064 
Average estimating equation values:
                          sum                    mutual.min 
                     95.78776                    -153.13504 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -250.35232                   -4502.87726 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    924.65779                   -2368.29640 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -12.21206                   -9362.34064 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.116312265396118  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.284 
Iteration 9 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.784179989                   1.221949545 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.192326946                   0.072042012 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.004900923                   0.003662734 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                  0.107907536                   0.017775289 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     85.12424                    -132.56988 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -210.07570                   -3891.95106 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    724.45038                   -1881.86748 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -9.87428                   -8082.69511 
Average estimating equation values:
                          sum                    mutual.min 
                     85.12424                    -132.56988 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -210.07570                   -3891.95106 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    724.45038                   -1881.86748 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -9.87428                   -8082.69511 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.129527539014817  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.577 
Iteration 10 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.841630038                   1.306052126 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.183833371                   0.078497848 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.004739779                   0.003530784 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                  0.116977486                   0.019769808 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     67.84198                    -113.89278 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -187.82542                   -3395.43958 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    602.84739                   -1917.60534 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -11.23556                   -6946.82677 
Average estimating equation values:
                          sum                    mutual.min 
                     67.84198                    -113.89278 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -187.82542                   -3395.43958 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    602.84739                   -1917.60534 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -11.23556                   -6946.82677 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.170588046312332  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.021 
Iteration 11 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.899555760                   1.385391091 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.172803015                   0.086232787 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.005638415                   0.003429850 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                  0.153221406                   0.021098929 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     58.19712                     -94.02332 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -153.11652                   -2811.75428 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    511.79992                   -1673.81482 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -8.05134                   -5732.99122 
Average estimating equation values:
                          sum                    mutual.min 
                     58.19712                     -94.02332 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -153.11652                   -2811.75428 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    511.79992                   -1673.81482 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -8.05134                   -5732.99122 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.242803692817688  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 5.033 
Iteration 12 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.975168418                   1.473801198 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.148766632                   0.092533280 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.006675623                   0.004897191 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                  0.199741661                   0.023078956 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     33.19960                     -71.71474 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -124.33802                   -2186.01758 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    267.58834                   -1416.63967 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -1.12518                   -4295.37692 
Average estimating equation values:
                          sum                    mutual.min 
                     33.19960                     -71.71474 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -124.33802                   -2186.01758 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    267.58834                   -1416.63967 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -1.12518                   -4295.37692 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.208 
Step length converged once. Increasing MCMC sample size.
Iteration 13 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -4.035385676                   1.549173415 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.136150018                   0.099937838 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.007600208                   0.005259372 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                  0.217016012                   0.023745948 
Using SOCK.
Sample size = 200000 by 25000 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    27.488610                    -48.283975 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -80.220915                  -1510.610140 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                   208.393597                   -911.762610 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -2.587725                  -3090.928291 
Average estimating equation values:
                          sum                    mutual.min 
                    27.488610                    -48.283975 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -80.220915                  -1510.610140 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                   208.393597                   -911.762610 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -2.587725                  -3090.928291 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 1.329 
Step length converged twice. Stopping.

This model was fit using MCMC.  To examine model diagnostics and check for degeneracy, use the mcmc.diagnostics() function.
Warning message:
In logLikNull.ergm(mainfit) :
  Null model likelihood calculation is not implemented for valued ERGMs at this time.
> 
> mod_allpartquad <-
+   ergm(net~sum+
+          mutual(form="min")+
+          transitiveweights(twopath="min",combine="max",affect="min")+
+          nodecov("NUMRESP",form='sum')+
+          nodecov("NUMGROUPS",form='sum')+nodecov("MEANYEARS",form='sum')+
+          nodematch("ORGTYPE",form='sum',diff=FALSE)+
+          nodecov('allpartdiv7')+nodecov('allpartdiv7quad'),
+        response="TVAL", reference=~DiscUnif(0,3),
+        control=control.ergm(init=c(geo.init, rep(0, 8)),
+                             MCMLE.maxit=30,MCMC.runtime.traceplot=F,seed=24,
+                             MCMLE.trustregion=100,MCMC.addto.se=T,
+                             parallel.type="SOCK",parallel=8,
+                             MPLE.max.dyad.types=1e+7,MCMC.samplesize=50000,
+                             MCMC.burnin=15000,MCMC.interval=1000,MCMLE.steplength=.25,
+                             MCMC.prop.args=list(p0=0.5)),eval.loglik=F,verbose=T)
Evaluating network in model
Initializing Metropolis-Hastings proposal(s): ergm:MH_DiscUnif
Initializing model.
Fitting initial model.
Fitting ERGM.
Density guard set to 20989 from an initial count of 1045  edges.
Iteration 1 of at most 30 with parameter: 
                          sum                    mutual.min 
                    -3.091141                      0.000000 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                     0.000000                      0.000000 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                     0.000000                      0.000000 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     0.000000                      0.000000 
 nodecov.sum..allpartdiv7quad 
                     0.000000 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    -11.25288                    -267.45246 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -622.15976                   -7559.97226 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    -90.61883                   -6364.07609 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -28.68066                  -15277.61639 
 nodecov.sum..allpartdiv7quad 
                -335559.16024 
Average estimating equation values:
                          sum                    mutual.min 
                    -11.25288                    -267.45246 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -622.15976                   -7559.97226 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    -90.61883                   -6364.07609 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -28.68066                  -15277.61639 
 nodecov.sum..allpartdiv7quad 
                -335559.16024 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.25  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 18.05 
Step length converged once. Increasing MCMC sample size.
Iteration 2 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.161555e+00                  3.467985e-01 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 9.576907e-02                  1.568263e-03 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 1.791320e-04                  1.885402e-04 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 2.685962e-03                 -2.013383e-03 
 nodecov.sum..allpartdiv7quad 
                 3.130268e-05 
Using SOCK.
Sample size = 200000 by 25000 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     87.91974                    -244.42224 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -471.45715                   -7307.24097 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    756.67908                   -4648.46722 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -18.64875                  -15040.77994 
 nodecov.sum..allpartdiv7quad 
                -337552.95508 
Average estimating equation values:
                          sum                    mutual.min 
                     87.91975                    -244.42224 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -471.45715                   -7307.24097 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    756.67908                   -4648.46722 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -18.64875                  -15040.77994 
 nodecov.sum..allpartdiv7quad 
                -337552.95508 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0441885888576508  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 5.87 
Iteration 3 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.287058e+00                  5.330166e-01 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 1.283547e-01                  1.678795e-02 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -6.722107e-05                  4.907072e-04 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 1.170517e-02                  1.214018e-03 
 nodecov.sum..allpartdiv7quad 
                 1.268269e-04 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     81.58956                    -230.69624 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -448.39098                   -6916.90746 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    710.43869                   -4531.08752 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -17.91278                  -14184.72823 
 nodecov.sum..allpartdiv7quad 
                -316735.67823 
Average estimating equation values:
                          sum                    mutual.min 
                     81.58956                    -230.69624 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -448.39098                   -6916.90746 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    710.43869                   -4531.08752 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -17.91278                  -14184.72823 
 nodecov.sum..allpartdiv7quad 
                -316735.67823 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0516995489597321  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 5.062 
Iteration 4 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.3936307859                  0.6873269648 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.1596707163                  0.0289519531 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -0.0011066506                  0.0007005306 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 0.0482335940                  0.0054059853 
 nodecov.sum..allpartdiv7quad 
                 0.0001001146 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     97.42214                    -215.04288 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -396.55022                   -6428.31344 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    819.45929                   -4012.86988 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -12.15592                  -13258.94722 
 nodecov.sum..allpartdiv7quad 
                -297084.00484 
Average estimating equation values:
                          sum                    mutual.min 
                     97.42214                    -215.04288 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -396.55022                   -6428.31344 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    819.45929                   -4012.86988 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -12.15592                  -13258.94722 
 nodecov.sum..allpartdiv7quad 
                -297084.00484 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0544398427009583  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.496 
Iteration 5 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.474962e+00                  7.986380e-01 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 1.740651e-01                  3.554076e-02 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -1.339509e-03                  1.041240e-03 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 4.455062e-02                  1.094536e-02 
 nodecov.sum..allpartdiv7quad 
                 1.108836e-05 
Using SOCK.
Sample size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     102.1388                     -202.7907 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -368.8735                    -6058.6262 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                     923.6743                    -3638.2764 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -17.9327                   -12440.2232 
 nodecov.sum..allpartdiv7quad 
                 -278314.1494 
Average estimating equation values:
                          sum                    mutual.min 
                     102.1388                     -202.7907 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                    -368.8735                    -6058.6262 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                     923.6743                    -3638.2764 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -17.9327                   -12440.2232 
 nodecov.sum..allpartdiv7quad 
                 -278314.1494 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0696053206920624  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.77 
Iteration 6 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.5724617870                  0.9190499776 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.1928627551                  0.0435765806 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -0.0020127499                  0.0011227188 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 0.0482406540                  0.0182575618 
 nodecov.sum..allpartdiv7quad 
                -0.0001501788 
Using SOCK.
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: sh: 0: getcwd() failed: No such file or directory
getcwdgetcwd() failed: No such file or dirSample
size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    103.88832                    -186.09442 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -322.45516                   -5546.20110 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    914.09073                   -3258.29326 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -13.95556                  -11387.32021 
 nodecov.sum..allpartdiv7quad 
                -256380.31448 
Average estimating equation values:
                          sum                    mutual.min 
                    103.88832                    -186.09442 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -322.45516                   -5546.20110 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    914.09073                   -3258.29326 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -13.95556                  -11387.32021 
 nodecov.sum..allpartdiv7quad 
                -256380.31448 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0744981765747072  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 3.778 
Iteration 7 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.6485009413                  1.0326064655 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.2036816439                  0.0476496186 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -0.0037526863                  0.0019266426 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 0.0724878493                  0.0243565910 
 nodecov.sum..allpartdiv7quad 
                -0.0002581269 
Using SOCK.
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd(getcwd() failed: No such file or directory
size = 50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    108.54302                    -169.36384 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -278.89540                   -5060.81924 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    922.97325                   -2756.51993 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -10.74634                  -10398.47792 
 nodecov.sum..allpartdiv7quad 
                -233430.47824 
Average estimating equation values:
                          sum                    mutual.min 
                    108.54302                    -169.36384 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -278.89540                   -5060.81924 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    922.97325                   -2756.51993 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                    -10.74634                  -10398.47792 
 nodecov.sum..allpartdiv7quad 
                -233430.47824 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.0872451663017274  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.055 
Iteration 8 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.7261820909                  1.1274921570 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.2018374396                  0.0532915113 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -0.0051470815                  0.0027841838 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 0.1188794794                  0.0305343523 
 nodecov.sum..allpartdiv7quad 
                -0.0003779606 
Using SOCK.
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: sh: 0: getcwd() failed: No such file or directory
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    117.31124                    -150.85088 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -231.98080                   -4531.50042 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    957.44688                   -2076.68876 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -0.38848                   -9301.49472 
 nodecov.sum..allpartdiv7quad 
                -208645.72830 
Average estimating equation values:
                          sum                    mutual.min 
                    117.31124                    -150.85088 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -231.98080                   -4531.50042 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    957.44688                   -2076.68876 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -0.38848                   -9301.49472 
 nodecov.sum..allpartdiv7quad 
                -208645.72830 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.120644688606262  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 5.189 
Iteration 9 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.801512918                   1.245030760 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.197497010                   0.055596478 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.007142991                   0.003537773 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                  0.123857674                   0.039856574 
 nodecov.sum..allpartdiv7quad 
                 -0.000570511 
Using SOCK.
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
h: 0: getcwd() failed50000 by 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                    106.55906                    -127.79082 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -196.69736                   -3957.63388 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    823.37967                   -1808.41322 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -3.83762                   -8068.45733 
 nodecov.sum..allpartdiv7quad 
                -179162.92853 
Average estimating equation values:
                          sum                    mutual.min 
                    106.55906                    -127.79082 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -196.69736                   -3957.63388 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    823.37967                   -1808.41322 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -3.83762                   -8068.45733 
 nodecov.sum..allpartdiv7quad 
                -179162.92853 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.122692674398422  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.4 
Iteration 10 of at most 30 with parameter: 
                          sum                    mutual.min 
                -3.8964035076                  1.3248705666 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                 0.1897321361                  0.0618066989 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                -0.0071521478                  0.0040825429 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                 0.1497149494                  0.0471581342 
 nodecov.sum..allpartdiv7quad 
                -0.0007470983 
Using SOCK.
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: sh: 0: getcwd() failed: No such file or dirsh: 0:Sample sgetcwd() faiby 6250 
Back from unconstrained MCMC. Average statistics:
                          sum                    mutual.min 
                     89.20332                    -109.95278 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -168.84056                   -3426.13938 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    749.90993                   -1525.60669 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -2.90962                   -7038.94025 
 nodecov.sum..allpartdiv7quad 
                -155066.50878 
Average estimating equation values:
                          sum                    mutual.min 
                     89.20332                    -109.95278 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                   -168.84056                   -3426.13938 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                    749.90993                   -1525.60669 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                     -2.90962                   -7038.94025 
 nodecov.sum..allpartdiv7quad 
                -155066.50878 
Calling MCMLE Optimization...
Using Newton-Raphson Step with step length  0.152032881975174  ...
Using lognormal metric (see control.ergm function).
Optimizing loglikelihood
Starting MCMC s.e. computation.
The log-likelihood improved by 4.587 
Iteration 11 of at most 30 with parameter: 
                          sum                    mutual.min 
                 -3.997536360                   1.400278514 
transitiveweights.min.max.min          nodecov.sum..NUMRESP 
                  0.179726017                   0.062961557 
       nodecov.sum..NUMGROUPS        nodecov.sum..MEANYEARS 
                 -0.007729120                   0.005597967 
        nodematch.sum.ORGTYPE      nodecov.sum..allpartdiv7 
                  0.154353679                   0.058690509 
 nodecov.sum..allpartdiv7quad 
                 -0.001025530 
Using SOCK.
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
sh: 0: getcwd() failed: No such file or directory
shell-init: error retrieving current directory: getcwd: cannot access parent directories: No such file or directory
